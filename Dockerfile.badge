# PyTorch 2.7.0 with CUDA 12.1 (공식 이미지)
FROM pytorch/pytorch:2.7.0-cuda12.8-cudnn9-runtime
# syntax=docker/dockerfile:1.4
#FROM --platform=linux/amd64 pytorch/pytorch:2.7.0-cuda12.8-cudnn9-runtime

#FROM pytorch/pytorch:2.7.0-cuda11.8-cudnn8-devel
#FROM pytorch/pytorch:2.7.0-cuda11.8-cudnn8-runtime
#2.7.0-cuda11.8-cudnn8-runtime

# 기본 시스템 패키지 설치: libglib2.0-0, libgl1은 cv2라이브러리 실행을 위한 필수 패키지. 
RUN apt-get update && apt-get install -y \
    libglib2.0-0 \
    libgl1 \
    git \
    curl \
    libvulkan1 \
    chromium-browser \
    chromium-chromedriver \
    wget \
    unzip \
    libnss3 \
    libxss1 \
    libappindicator3-1 \
    libasound2 \
    fonts-liberation \
    xdg-utils \
    libatk-bridge2.0-0 \
    libgtk-3-0 \
    libgbm1 \
    #libgl1-mesa-glx \
    && rm -rf /var/lib/apt/lists/*

# 작업 디렉토리 설정
WORKDIR /app

# requirements.txt 복사 및 설치
COPY requirements.badge.txt .
RUN pip install --upgrade pip
RUN pip install -r requirements.badge.txt

# RUN wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb && \
#     apt-get install -y ./google-chrome-stable_current_amd64.deb && \
#     rm google-chrome-stable_current_amd64.deb

RUN wget https://edgedl.me.gvt1.com/edgedl/chrome/chrome-for-testing/137.0.7151.70/linux64/chrome-linux64.zip && \
    unzip chrome-linux64.zip && \
    mv chrome-linux64 /opt/chrome && \
    ln -s /opt/chrome/chrome /usr/bin/google-chrome && \
    rm chrome-linux64.zip

RUN wget https://edgedl.me.gvt1.com/edgedl/chrome/chrome-for-testing/137.0.7151.70/linux64/chromedriver-linux64.zip && \
unzip chromedriver-linux64.zip && \
mv chromedriver-linux64/chromedriver /usr/bin/chromedriver && \
chmod +x /usr/bin/chromedriver && \
rm -rf chromedriver-linux64* 

# 앱 코드 복사
COPY . .

# 캐시 디렉토리 설정 (선택)
ENV HUGGINGFACE_HUB_CACHE=/app/.cache/huggingface
ENV TRANSFORMERS_CACHE=/app/.cache/transformers
ENV CHROME_BIN=/usr/bin/chromium-browser
ENV CHROMEDRIVER_PATH=/usr/bin/chromedriver

# FastAPI 앱 실행 (포트는 필요에 따라 조정)

CMD ["uvicorn", "app.main_badge:app_badge", "--host", "0.0.0.0", "--port", "8080"]