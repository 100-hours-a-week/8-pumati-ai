# Dockerfile.crawling
# FROM gcr.io/deeplearning-platform-release/pytorch-gpu.2-1:latest

# 순수 파이썬 이미지로 변경
FROM pytorch/pytorch:2.1.0-cuda11.8-cudnn8-runtime

WORKDIR /app
COPY . .

# 시스템 패키지 업데이트 및 git 설치
RUN apt-get update && \
    apt-get install -y git && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# 쓰기 가능한 디렉토리 미리 생성
RUN mkdir -p /tmp/cached_wikis && chmod 755 /tmp/cached_wikis

# requirements 설치 (크롤링 전용 버전 사용)   
COPY requirements.crawling.txt requirements.crawling.txt
RUN pip uninstall -y torch_xla || true
RUN pip install --no-cache-dir -r requirements.crawling.txt

# 빌드 인자 정의
ARG ORG_NAME
ARG TEAM_LIST_API_URL
ARG USE_BACKEND_API

ARG GITHUB_TOKEN
ARG QDRANT_URL
ARG QDRANT_API_KEY
ARG QDRANT_COLLECTION
ARG GEMINI_API_KEY

# ENV로 설정
ENV ORG_NAME=${ORG_NAME}
ENV TEAM_LIST_API_URL=${TEAM_LIST_API_URL}
ENV USE_BACKEND_API=${USE_BACKEND_API}

ENV GITHUB_TOKEN=${GITHUB_TOKEN}
ENV QDRANT_URL=${QDRANT_URL}
ENV QDRANT_API_KEY=${QDRANT_API_KEY}
ENV QDRANT_COLLECTION=${QDRANT_COLLECTION}
ENV GEMINI_API_KEY=${GEMINI_API_KEY}

# .env 파일 생성
RUN mkdir -p /workspace && \
    echo "ORG_NAME=${ORG_NAME}" >> /workspace/.env && \
    echo "TEAM_LIST_API_URL=${TEAM_LIST_API_URL}" >> /workspace/.env && \
    echo "USE_BACKEND_API=${USE_BACKEND_API}" >> /workspace/.env && \
    echo "GITHUB_TOKEN=${GITHUB_TOKEN}" >> /workspace/.env && \
    echo "QDRANT_URL=${QDRANT_URL}" >> /workspace/.env && \
    echo "QDRANT_API_KEY=${QDRANT_API_KEY}" >> /workspace/.env && \
    echo "QDRANT_COLLECTION=${QDRANT_COLLECTION}" >> /workspace/.env && \
    echo "GEMINI_API_KEY=${GEMINI_API_KEY}" >> /workspace/.env

CMD ["python", "-m", "app.github_crawling.scheduler"]